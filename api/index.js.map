{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/lucasmichals/Projects/3s1t/editor/app/root.tsx", "../node_modules/react-dnd/src/core/DndContext.ts", "../node_modules/dnd-core/src/createDragDropManager.ts", "../node_modules/@react-dnd/invariant/src/index.ts", "../node_modules/dnd-core/src/utils/js_utils.ts", "../node_modules/dnd-core/src/actions/dragDrop/types.ts", "../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts", "../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts", "../node_modules/dnd-core/src/actions/dragDrop/drop.ts", "../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts", "../node_modules/dnd-core/src/utils/matchesType.ts", "../node_modules/dnd-core/src/actions/dragDrop/hover.ts", "../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts", "../node_modules/dnd-core/src/actions/dragDrop/index.ts", "../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts", "../node_modules/dnd-core/src/utils/coords.ts", "../node_modules/dnd-core/src/utils/dirtiness.ts", "../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts", "../node_modules/@react-dnd/asap/src/makeRequestCall.ts", "../node_modules/@react-dnd/asap/src/AsapQueue.ts", "../node_modules/@react-dnd/asap/src/RawTask.ts", "../node_modules/@react-dnd/asap/src/TaskFactory.ts", "../node_modules/@react-dnd/asap/src/asap.ts", "../node_modules/dnd-core/src/actions/registry.ts", "../node_modules/dnd-core/src/contracts.ts", "../node_modules/dnd-core/src/interfaces.ts", "../node_modules/dnd-core/src/utils/getNextUniqueId.ts", "../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts", "../node_modules/dnd-core/src/utils/equality.ts", "../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts", "../node_modules/dnd-core/src/reducers/dragOffset.ts", "../node_modules/dnd-core/src/reducers/dragOperation.ts", "../node_modules/dnd-core/src/reducers/refCount.ts", "../node_modules/dnd-core/src/reducers/stateId.ts", "../node_modules/dnd-core/src/reducers/index.ts", "../node_modules/react-dnd/src/core/DndProvider.tsx", "../node_modules/react-dnd/src/hooks/useCollector.ts", "../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts", "../node_modules/react-dnd/src/hooks/useMonitorOutput.ts", "../node_modules/react-dnd/src/hooks/useCollectedProps.ts", "../node_modules/react-dnd/src/hooks/useOptionalFactory.ts", "../node_modules/react-dnd/src/hooks/useDrag/connectors.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts", "../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts", "../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts", "../node_modules/react-dnd/src/internals/registration.ts", "../node_modules/@react-dnd/shallowequal/src/index.ts", "../node_modules/react-dnd/src/internals/isRef.ts", "../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts", "../node_modules/react-dnd/src/internals/SourceConnector.ts", "../node_modules/react-dnd/src/internals/TargetConnector.ts", "../node_modules/react-dnd/src/hooks/useDragDropManager.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts", "../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts", "../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts", "../node_modules/react-dnd/src/hooks/useDrop/connectors.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts", "../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts", "../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts", "../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts", "../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts", "../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts", "../node_modules/react-dnd-html5-backend/src/NativeTypes.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts", "../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts", "../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts", "../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts", "../node_modules/react-dnd-html5-backend/src/OptionsReader.ts", "../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts", "../node_modules/react-dnd-html5-backend/src/index.ts", "/Users/lucasmichals/Projects/3s1t/editor/app/routes/$navLevel1.tsx", "../app/components/applicationComponents/NavLevel1/index.tsx", "../app/components/applicationComponents/Icon/index.tsx", "/Users/lucasmichals/Projects/3s1t/editor/app/routes/$navLevel1/index.tsx", "../app/components/applicationComponents/Editor/index.tsx", "../app/components/applicationComponents/Scene/index.tsx", "../app/state/engineState.ts", "../app/state/editorState.ts", "../app/state/defaultState.ts", "../app/state/helpers.ts", "../app/components/applicationComponents/CamFollowerScene/index.tsx", "../app/components/modelComponents/Cam/index.tsx", "../app/components/modelComponents/Cam/skeleton.ts", "../app/components/modelComponents/Engine/index.tsx", "../app/components/modelComponents/CrankshaftAssembly/index.tsx", "../app/components/modelComponents/CrankshaftAssembly/skeleton.ts", "../app/components/modelComponents/PistonAssembly/index.tsx", "../app/helpers/index.ts", "/Users/lucasmichals/Projects/3s1t/editor/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"~/styles/app.css\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nexport const links: LinksFunction = () => [{ rel: \"stylesheet\", href: styles }];\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\" data-theme=\"business\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <DndProvider backend={HTML5Backend}>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </DndProvider>\n      </body>\n    </html>\n  );\n}\n", "import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n", "import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n", "/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n", "// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n", "export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n", "import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n", "import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n", "import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n", "import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n", "import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n", "import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n", "// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n", "/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js\u2019s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n", "// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n", "import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n", "import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n", "import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n", "export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n", "let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n", "import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n", "import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n", "import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n", "import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n", "import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n", "import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n", "import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n", "import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n", "import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n", "import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n", "export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n", "export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n", "import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n", "import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n", "import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n", "import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n", "import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n", "import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n", "import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n", "import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n", "import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n", "import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n", "import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n", "import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n", "import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n", "// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n", "import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n", "import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n", "export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n", "export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n", "import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n", "import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n", "import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n", "export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n", "import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n", "import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n", "import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n", "import { useParams, Outlet } from \"@remix-run/react\";\n\nimport NavLevel1 from \"~/components/applicationComponents/NavLevel1\";\n\nexport default function () {\n  const { navLevel1 } = useParams();\n\n  return (\n    <div className=\"flex h-screen w-screen\">\n      <NavLevel1 currentRoute={navLevel1} />\n      <Outlet />\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { Link } from \"@remix-run/react\";\nimport {\n  ModelIcon,\n  CodeIcon,\n  AnalysisIcon,\n  SettingsIcon,\n} from \"~/components/applicationComponents/Icon\";\n\ntype NavLevel1Option = {\n  route: string;\n  name: string;\n  Icon: React.FC;\n};\n\nconst navLevel1Options: NavLevel1Option[] = [\n  {\n    route: \"/model\",\n    name: \"Model\",\n    Icon: ModelIcon,\n  },\n  {\n    route: \"/code\",\n    name: \"Code\",\n    Icon: CodeIcon,\n  },\n  {\n    route: \"/analysis\",\n    name: \"Analysis\",\n    Icon: AnalysisIcon,\n  },\n  {\n    route: \"/settings\",\n    name: \"Settings\",\n    Icon: SettingsIcon,\n  },\n];\n\ninterface NavLevel1Props {\n  currentRoute?: string;\n}\n\nexport default function NavLevel1({ currentRoute }: NavLevel1Props) {\n  return (\n    <>\n      <ul className=\"menu bg-base-100 p-2 gap-2\">\n        {navLevel1Options.map(({ route, Icon }) => {\n          const routeIsActive = route == `/${currentRoute}`;\n          return (\n            <li key={route}>\n              <Link\n                className={`justify-center ${routeIsActive ? \"active\" : \"\"}`}\n                to={routeIsActive ? \"/\" : route}\n                // to={route}\n              >\n                <Icon />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n", "/* Nav Icons */\nexport function ModelIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"\n      />\n    </svg>\n  );\n}\n\nexport function CodeIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\"\n      />\n    </svg>\n  );\n}\n\nexport function AnalysisIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n      />\n    </svg>\n  );\n}\n\nexport function SettingsIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"\n      />\n    </svg>\n  );\n}\n\n/* Other Icons */\nexport function XIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-4 w-4\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n      />\n    </svg>\n  );\n}\n", "import React, { useEffect } from \"react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useNavigate, useParams } from \"@remix-run/react\";\nimport Editor from \"~/components/applicationComponents/Editor\";\nimport Scene from \"~/components/applicationComponents/Scene\";\nimport CamFollowerScene from \"~/components/applicationComponents/CamFollowerScene\";\nimport Engine from \"~/components/modelComponents/Engine\";\nimport { EditorState, useEditorStore } from \"~/state\";\nimport PistonAssembly from \"~/components/modelComponents/PistonAssembly\";\n\nexport const loader: LoaderFunction = async () => {\n  const complexEditorState: EditorState = {\n    direction: \"row\",\n    subGroups: [\n      {\n        activeTabIndex: 1,\n        tabs: [\n          { name: \"Tab A\", id: \"abc123\", component: \"box\" },\n          { name: \"Tab B\", id: \"xyz789\", component: \"sphere\" },\n          { name: \"Tab C\", id: \"xyz789\", component: \"cone\" },\n        ],\n      },\n      {\n        direction: \"col\",\n        subGroups: [\n          {\n            activeTabIndex: 1,\n            tabs: [\n              { name: \"Tab D\", id: \"abc123\", component: \"cylinder\" },\n              { name: \"Tab E\", id: \"xyz789\", component: \"cone\" },\n            ],\n          },\n          {\n            direction: \"row\",\n            subGroups: [\n              {\n                activeTabIndex: 0,\n                tabs: [\n                  { name: \"Tab F\", id: \"abc123\", component: \"sphere\" },\n                  { name: \"Tab G\", id: \"xyz789\", component: \"cone\" },\n                ],\n              },\n              {\n                activeTabIndex: 1,\n                tabs: [\n                  { name: \"Tab H\", id: \"abc123\", component: \"cone\" },\n                  { name: \"Tab I\", id: \"xyz789\", component: \"cylinder\" },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n\n  const simpleEditorState: EditorState = {\n    activeTabIndex: 0,\n    tabs: [\n      { name: \"Tab A\", id: \"abc123\", component: \"box\" },\n      { name: \"Tab B\", id: \"xyz123\", component: \"sphere\" },\n    ],\n  };\n\n  return json(complexEditorState);\n};\n\nexport default function () {\n  const { navLevel1 } = useParams();\n  const backendEditorState = useLoaderData<EditorState>();\n  const { editorState, setEditorState } = useEditorStore();\n  useEffect(() => {\n    setEditorState(backendEditorState); // TODO: look into how to pass in state to initialization (prev line) instead of setting it here\n  }, []);\n\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"w-full h-full\">\n      {navLevel1 == \"model\" && <Editor state={editorState} />}\n      {navLevel1 == \"code\" && (\n        <Scene>\n          <Engine navigate={navigate} />\n        </Scene>\n      )}\n      {navLevel1 == \"analysis\" && <CamFollowerScene />}\n      {navLevel1 == \"settings\" && (\n        <Scene>\n          <PistonAssembly />\n        </Scene>\n      )}\n    </div>\n  );\n}\n", "import React from \"react\";\n\nimport { Box, Sphere, Cone, Cylinder, Html } from \"@react-three/drei\";\nimport { useDrop, useDrag } from \"react-dnd\";\n\nimport Scene from \"~/components/applicationComponents/Scene\";\n\nimport {\n  EditorState,\n  SplitGroupState,\n  useEditorStore,\n  TabState,\n} from \"~/state\";\nimport { XIcon } from \"../Icon\";\n\ntype TabGroupProps = {\n  breadcrumbsFromRoot?: number[];\n  state: { activeTabIndex?: number; tabs: TabState[] };\n};\n\nconst componentMap = {\n  box: () => (\n    <Box>\n      <meshStandardMaterial color=\"green\" />\n    </Box>\n  ),\n  sphere: () => (\n    <Sphere>\n      <meshStandardMaterial color=\"blue\" />\n    </Sphere>\n  ),\n  cone: () => (\n    <Cone>\n      <meshStandardMaterial color=\"red\" />\n    </Cone>\n  ),\n  cylinder: () => (\n    <Cylinder>\n      <meshStandardMaterial color=\"rebeccapurple\" />\n    </Cylinder>\n  ),\n};\n\ntype DraggableTabItem = {\n  id: string;\n  name: string;\n  fromBreadcrumbs: number[];\n  isDragging: boolean;\n};\n\ntype DraggableTabProps = {\n  id: string;\n  name: string;\n  active: boolean;\n  tabBreadcrumbsFromRoot: number[];\n};\n\nfunction DraggableTab({\n  id,\n  name,\n  active,\n  tabBreadcrumbsFromRoot,\n}: DraggableTabProps) {\n  // Drag item definition\n  const [, dragRef] = useDrag({\n    type: \"tab\",\n    item: {\n      id,\n      name,\n      fromBreadcrumbs: tabBreadcrumbsFromRoot,\n    },\n  });\n\n  const { setTabActive, deleteTab, moveTabOntoAnotherTab } = useEditorStore();\n\n  // Drop Zone 1\n  const [, tabDropRef] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} onto another tab at ${tabBreadcrumbsFromRoot}`\n      );\n      moveTabOntoAnotherTab(item.fromBreadcrumbs, tabBreadcrumbsFromRoot);\n      setTabActive(tabBreadcrumbsFromRoot);\n    },\n  });\n\n  return (\n    <div ref={tabDropRef}>\n      <a\n        ref={dragRef}\n        className={`tab tab-bordered ${active ? \"tab-active\" : \"\"}`}\n        onClick={() => {\n          setTabActive(tabBreadcrumbsFromRoot);\n        }}\n      >\n        {name}\n        <div\n          onClick={(e) => {\n            deleteTab(tabBreadcrumbsFromRoot);\n            e.stopPropagation();\n          }}\n        >\n          <XIcon />\n        </div>\n      </a>\n    </div>\n  );\n}\n\nfunction TabGroup({\n  state: { tabs = [], activeTabIndex = 0 },\n  breadcrumbsFromRoot = [],\n}: TabGroupProps) {\n  const { moveTabOntoView } = useEditorStore();\n\n  // determine which model is shown in the viewer\n  let ActiveComponent;\n  if (tabs[activeTabIndex] && componentMap[tabs[activeTabIndex].component]) {\n    ActiveComponent = componentMap[tabs[activeTabIndex].component];\n  } else {\n    ActiveComponent = () => (\n      <Html>\n        <div>Please select a new tab</div>\n      </Html>\n    );\n  }\n\n  // Drop Zone 2\n  const [, tabGroupRef] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} into blank space of group at ${breadcrumbsFromRoot}`\n      );\n    },\n  });\n\n  // Drop Zone 3a\n  const [{ isOver: isOver3a, canDrop: canDrop3a }, dropZone3a] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} into center of viewer at ${breadcrumbsFromRoot}`\n      );\n      moveTabOntoView(item.fromBreadcrumbs, breadcrumbsFromRoot, \"center\");\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  // Drop Zone 3b\n  const [{ isOver: isOver3b, canDrop: canDrop3b }, dropZone3b] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} into top of viewer at ${breadcrumbsFromRoot}`\n      );\n      moveTabOntoView(item.fromBreadcrumbs, breadcrumbsFromRoot, \"top\");\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  // Drop Zone 3c\n  const [{ isOver: isOver3c, canDrop: canDrop3c }, dropZone3c] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} into bottom of viewer at ${breadcrumbsFromRoot}`\n      );\n      moveTabOntoView(item.fromBreadcrumbs, breadcrumbsFromRoot, \"bottom\");\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  // Drop Zone 3d\n  const [{ isOver: isOver3d, canDrop: canDrop3d }, dropZone3d] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} into left of viewer at ${breadcrumbsFromRoot}`\n      );\n      moveTabOntoView(item.fromBreadcrumbs, breadcrumbsFromRoot, \"left\");\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  // Drop Zone 3e\n  const [{ isOver: isOver3e, canDrop: canDrop3e }, dropZone3e] = useDrop({\n    accept: \"tab\",\n    drop: (item: DraggableTabItem) => {\n      console.log(\n        `tab was dragged from ${item.fromBreadcrumbs} into right of viewer at ${breadcrumbsFromRoot}`\n      );\n      moveTabOntoView(item.fromBreadcrumbs, breadcrumbsFromRoot, \"right\");\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  return (\n    <div className=\"flex flex-col w-full h-full\">\n      <div className=\"flex flex-row tabs\">\n        {tabs.map((tab, i) => {\n          const tabBreadcrumbsFromRoot = [...breadcrumbsFromRoot, i];\n\n          return (\n            <DraggableTab\n              key={i}\n              id={tab.id}\n              name={tab.name}\n              active={activeTabIndex == i}\n              tabBreadcrumbsFromRoot={tabBreadcrumbsFromRoot}\n            />\n          );\n        })}\n        <div\n          className=\"tab-group-empty-space grow h-full tab-drop-zone-2\"\n          ref={tabGroupRef}\n        />\n      </div>\n      <div className=\"w-full h-full relative\">\n        <div\n          className={`p-2 absolute top-1/4 left-1/4 w-1/2 h-1/2 ${\n            canDrop3a ? \"z-10\" : \"-z-10\"\n          }`}\n        >\n          <div\n            ref={dropZone3a}\n            className={`tab-drop-zone-3a-viewer-center w-full h-full ${\n              isOver3a ? \"bg-amber-500/50\" : \"bg-slate-500/50\"\n            }`}\n          />\n        </div>\n        <div\n          className={`p-2 absolute top-0 left-1/4 w-1/2 h-1/4 ${\n            canDrop3a ? \"z-10\" : \"-z-10\"\n          }`}\n        >\n          <div\n            ref={dropZone3b}\n            className={`tab-drop-zone-3b-viewer-top w-full h-full ${\n              isOver3b ? \"bg-amber-500/50\" : \"bg-slate-500/50\"\n            }`}\n          />\n        </div>\n        <div\n          className={`p-2 absolute bottom-0 left-1/4 w-1/2 h-1/4 ${\n            canDrop3a ? \"z-10\" : \"-z-10\"\n          }`}\n        >\n          <div\n            ref={dropZone3c}\n            className={`tab-drop-zone-3c-viewer-bottom w-full h-full ${\n              isOver3c ? \"bg-amber-500/50\" : \"bg-slate-500/50\"\n            }`}\n          />\n        </div>\n        <div\n          className={`p-2 absolute left-0 w-1/4 h-full ${\n            canDrop3a ? \"z-10\" : \"-z-10\"\n          }`}\n        >\n          <div\n            ref={dropZone3d}\n            className={`tab-drop-zone-3d-viewer-left w-full h-full ${\n              isOver3d ? \"bg-amber-500/50\" : \"bg-slate-500/50\"\n            }`}\n          />\n        </div>\n        <div\n          className={`p-2 absolute right-0 w-1/4 h-full ${\n            canDrop3a ? \"z-10\" : \"-z-10\"\n          }`}\n        >\n          <div\n            ref={dropZone3e}\n            className={`tab-drop-zone-3e-viewer-right w-full h-full ${\n              isOver3e ? \"bg-amber-500/50\" : \"bg-slate-500/50\"\n            }`}\n          />\n        </div>\n        <Scene>\n          <ActiveComponent />\n        </Scene>\n      </div>\n    </div>\n  );\n}\n\ntype SplitGroupProps = {\n  breadcrumbsFromRoot?: number[];\n  state: SplitGroupState;\n};\n\nfunction SplitGroup({\n  state: { subGroups, direction },\n  breadcrumbsFromRoot = [],\n}: SplitGroupProps) {\n  return (\n    <div\n      className={`flex ${\n        direction == \"row\" ? \"flex-row\" : \"flex-col\"\n      } w-full h-full`}\n    >\n      {subGroups.map((subGroupState, i) => {\n        const props = {\n          key: i,\n          state: subGroupState,\n          breadcrumbsFromRoot: [...breadcrumbsFromRoot, i],\n        };\n        return <Editor {...props} />;\n      })}\n    </div>\n  );\n}\ntype EditorProps = {\n  breadcrumbsFromRoot?: number[];\n  state: EditorState;\n};\n\nexport default function Editor({\n  breadcrumbsFromRoot = [],\n  state,\n}: EditorProps) {\n  return (\n    <div className=\"w-full h-full border border-[#243c5a]\">\n      {state ? (\n        \"direction\" in state ? (\n          <SplitGroup state={state} breadcrumbsFromRoot={breadcrumbsFromRoot} />\n        ) : (\n          <TabGroup state={state} breadcrumbsFromRoot={breadcrumbsFromRoot} />\n        )\n      ) : (\n        <div>empty</div>\n      )}\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, OrthographicCamera } from \"@react-three/drei\";\nimport { folder, Leva, useControls } from \"leva\";\n\nconst Scene: React.FC = ({ children }) => {\n  const [{ backgroundColor }] = useControls(() => ({\n    Settings: folder({\n      backgroundColor: \"#aaaaaa\",\n    }),\n  }));\n\n  return (\n    <div className=\"w-full h-full\">\n      <Leva collapsed />\n\n      <Canvas>\n        <color attach=\"background\" args={[backgroundColor]} />\n        <OrbitControls />\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <axesHelper args={[10]} />\n        <OrthographicCamera makeDefault position={[10, 10, 10]} zoom={20} />\n        {children}\n      </Canvas>\n    </div>\n  );\n};\n\nexport default Scene;\n", "import create from \"zustand\";\n\nexport interface EngineState {\n  elapsedTime: number;\n  setElapsedTime: (to: number) => void;\n\n  crankshaftAngle: number;\n  setCrankshaftAngle: (to: number) => void;\n}\n\nexport const useEngineStore = create<EngineState>()((set) => ({\n  elapsedTime: 0,\n  setElapsedTime: (to) => set(() => ({ elapsedTime: to })),\n\n  crankshaftAngle: 0,\n  setCrankshaftAngle: (to) => set(() => ({ crankshaftAngle: to })),\n}));\n", "import create from \"zustand\";\nimport produce from \"immer\";\nimport { defaultInitialEditorState } from \"./defaultState\";\nimport { getItemAtBreadcrumbs } from \"./helpers\";\n\nexport type TabState = {\n  name: string;\n  id: string;\n  component: \"box\" | \"sphere\" | \"cone\" | \"cylinder\";\n};\n\nexport type SplitGroupState = {\n  direction: \"row\" | \"col\";\n  subGroups: EditorState[];\n};\n\nexport type TabGroupState = {\n  activeTabIndex?: number;\n  tabs?: TabState[];\n};\n\nexport type EditorState = TabGroupState | SplitGroupState;\n\nexport type ViewDropArea = \"top\" | \"bottom\" | \"left\" | \"right\" | \"center\";\n\nexport type EditorStore = {\n  editorState: EditorState;\n  setEditorState: (state: EditorState) => void;\n  setTabActive: (breadcrumbs: number[]) => void;\n  deleteTab: (breadcrumbs: number[]) => void;\n  moveTabOntoAnotherTab: (\n    breadcrumbsFrom: number[],\n    breadcrumbsTo: number[]\n  ) => void;\n  moveTabOntoView: (\n    breadcrumbsFrom: number[],\n    breadcrumbsTo: number[],\n    direction: ViewDropArea\n  ) => void;\n};\n\nexport const useEditorStore = create<EditorStore>()((set) => ({\n  editorState: defaultInitialEditorState,\n\n  setEditorState: (newState: any) =>\n    set((baseState) =>\n      produce(baseState, (draftState) => {\n        draftState.editorState = newState;\n      })\n    ),\n\n  setTabActive: (breadcrumbs) =>\n    set((baseState) =>\n      produce(baseState, (draftState) => {\n        const tabGroupBreadcrumbs: number[] = breadcrumbs.slice(0, -1);\n        const tabBreadcrumb: number = breadcrumbs[breadcrumbs.length - 1];\n\n        const tabGroup = getItemAtBreadcrumbs(\n          draftState.editorState,\n          tabGroupBreadcrumbs\n        );\n\n        if (\"activeTabIndex\" in tabGroup) {\n          tabGroup.activeTabIndex = tabBreadcrumb;\n        } else {\n          throw \"Invalid state/breadcrumb combination\";\n        }\n      })\n    ),\n\n  deleteTab: (breadcrumbs) =>\n    set((baseState) =>\n      produce(baseState, (draftState) => {\n        const tabGroupBreadcrumbs: number[] = breadcrumbs.slice(0, -1);\n        const tabBreadcrumb: number = breadcrumbs[breadcrumbs.length - 1];\n\n        const tabGroup = getItemAtBreadcrumbs(\n          draftState.editorState,\n          tabGroupBreadcrumbs\n        );\n\n        if (\n          \"activeTabIndex\" in tabGroup &&\n          tabGroup.tabs !== undefined &&\n          tabGroup.activeTabIndex != undefined\n        ) {\n          const tabToLeftOfActiveTab = tabBreadcrumb < tabGroup.activeTabIndex;\n          const tabIsActive = tabBreadcrumb == tabGroup.activeTabIndex;\n          const tabIsLast = tabBreadcrumb == tabGroup.tabs.length - 1;\n          const tabActiveAndLast = tabIsActive && tabIsLast;\n\n          tabGroup.tabs.splice(tabBreadcrumb, 1);\n\n          if (tabToLeftOfActiveTab || tabActiveAndLast) {\n            tabGroup.activeTabIndex--;\n          }\n        } else {\n          throw \"Invalid state/breadcrumb combination\";\n        }\n      })\n    ),\n\n  moveTabOntoAnotherTab: (breadcrumbsFrom, breadcrumbsTo) =>\n    set((baseState) =>\n      produce(baseState, (draftState) => {\n        const originTabGroupBreadcrumbs: number[] = breadcrumbsFrom.slice(\n          0,\n          -1\n        );\n        const originTabBreadcrumb: number =\n          breadcrumbsFrom[breadcrumbsFrom.length - 1];\n        const destinationTabGroupBreadcrumbs: number[] = breadcrumbsTo.slice(\n          0,\n          -1\n        );\n        const destinationTabBreadcrumb: number =\n          breadcrumbsTo[breadcrumbsTo.length - 1];\n\n        const originTabGroup = getItemAtBreadcrumbs(\n          draftState.editorState,\n          originTabGroupBreadcrumbs\n        );\n        const destinationTabGroup = getItemAtBreadcrumbs(\n          draftState.editorState,\n          destinationTabGroupBreadcrumbs\n        );\n        const tab = getItemAtBreadcrumbs(\n          draftState.editorState,\n          breadcrumbsFrom\n        );\n\n        if (\n          \"tabs\" in originTabGroup &&\n          \"tabs\" in destinationTabGroup &&\n          \"id\" in tab &&\n          originTabGroup.tabs !== undefined &&\n          destinationTabGroup.tabs !== undefined\n        ) {\n          // delete tab from origin group\n          originTabGroup.tabs.splice(originTabBreadcrumb, 1);\n\n          // add tab to destination group\n          destinationTabGroup.tabs.splice(destinationTabBreadcrumb, 0, tab);\n        } else {\n          throw \"Invalid state/breadcrumb combination\";\n        }\n      })\n    ),\n\n  moveTabOntoView: (breadcrumbsFrom, breadcrumbsTo, viewDropArea) =>\n    set((baseState) =>\n      produce(baseState, (draftState) => {\n        console.log(1);\n        const originTabGroupBreadcrumbs: number[] = breadcrumbsFrom.slice(\n          0,\n          -1\n        );\n        const originTabBreadcrumb: number =\n          breadcrumbsFrom[breadcrumbsFrom.length - 1];\n        const destinationTabGroupBreadcrumbs: number[] = breadcrumbsTo.slice(\n          0,\n          -1\n        );\n        const originTabGroupParentBreadcrumbs: number[] = breadcrumbsFrom.slice(\n          0,\n          -2\n        );\n        const destinationTabGroupParentBreadcrumbs: number[] =\n          breadcrumbsTo.slice(0, -2);\n        const destinationTabBreadcrumb: number =\n          breadcrumbsTo[breadcrumbsTo.length - 1];\n\n        // groups\n        const originTabGroup = getItemAtBreadcrumbs(\n          draftState.editorState,\n          originTabGroupBreadcrumbs\n        );\n        const originTabParentGroup: any = getItemAtBreadcrumbs(\n          draftState.editorState,\n          originTabGroupParentBreadcrumbs\n        );\n        const destinationTabGroup = getItemAtBreadcrumbs(\n          draftState.editorState,\n          destinationTabGroupBreadcrumbs\n        );\n        const destinationTabParentGroup: any = getItemAtBreadcrumbs(\n          draftState.editorState,\n          destinationTabGroupParentBreadcrumbs\n        );\n\n        // tab\n        const tab = getItemAtBreadcrumbs(\n          draftState.editorState,\n          breadcrumbsFrom\n        );\n\n        console.log(JSON.parse(JSON.stringify(originTabGroup)));\n        console.log(JSON.parse(JSON.stringify(destinationTabGroup)));\n\n        if (originTabGroup == destinationTabGroup) {\n          if (viewDropArea == \"center\") {\n            return;\n          } else {\n            // grab a ref to the tabs\n            const tabsRef = destinationTabParentGroup.tabs;\n            const activeTabIndexRef = destinationTabParentGroup.activeTabIndex;\n\n            // delete the tab from the origin group\n            tabsRef.splice(originTabBreadcrumb, 1);\n\n            // delete the keys that are used for a tab group\n            delete destinationTabParentGroup.tabs;\n            delete destinationTabParentGroup.activeTabIndex;\n\n            console.log(\"1\");\n            // convert parent to a split group\n            if (viewDropArea == \"top\") {\n              // first check if originTabParentGroup is already a col\n              console.log(\"top\");\n              if (originTabParentGroup.direction == \"col\") {\n                // adds a sibling to the group with the new group above the current\n                console.log(\"foo\");\n              } else {\n                // create a new split group\n                destinationTabParentGroup.direction = \"col\";\n                destinationTabParentGroup.subGroups = [\n                  {\n                    activeTabIndex: 0,\n                    tabs: [tab],\n                  },\n                  {\n                    activeTabIndex: activeTabIndexRef,\n                    tabs: tabsRef,\n                  },\n                ];\n              }\n            } else if (viewDropArea == \"bottom\") {\n              destinationTabParentGroup.direction = \"col\";\n              destinationTabParentGroup.subGroups = [\n                {\n                  activeTabIndex: activeTabIndexRef,\n                  tabs: tabsRef,\n                },\n                {\n                  activeTabIndex: 0,\n                  tabs: [tab],\n                },\n              ];\n            } else if (viewDropArea == \"left\") {\n              destinationTabParentGroup.direction = \"row\";\n              destinationTabParentGroup.subGroups = [\n                {\n                  activeTabIndex: 0,\n                  tabs: [tab],\n                },\n                {\n                  activeTabIndex: activeTabIndexRef,\n                  tabs: tabsRef,\n                },\n              ];\n            } else if (viewDropArea == \"right\") {\n              destinationTabParentGroup.direction = \"row\";\n              destinationTabParentGroup.subGroups = [\n                {\n                  activeTabIndex: activeTabIndexRef,\n                  tabs: tabsRef,\n                },\n                {\n                  activeTabIndex: 0,\n                  tabs: [tab],\n                },\n              ];\n            }\n          }\n        }\n      })\n    ),\n}));\n", "import { EditorState } from \".\";\n\nexport const defaultInitialEditorState: EditorState = {\n  activeTabIndex: 0,\n  tabs: [],\n};\n", "import {\n  EditorState,\n  EditorStore,\n  SplitGroupState,\n  TabGroupState,\n  TabState,\n} from \".\";\n\nexport function getItemAtBreadcrumbs(\n  state: EditorState,\n  breadcrumbs: number[]\n): TabGroupState | SplitGroupState | TabState {\n  let pointer: TabGroupState | SplitGroupState | TabState = state;\n  breadcrumbs.forEach((breadcrumb) => {\n    if (\"subGroups\" in pointer) {\n      pointer = pointer.subGroups[breadcrumb];\n      if (pointer == undefined) throw \"Breadcrumb for subgroup invalid\";\n    } else if (\"tabs\" in pointer) {\n      pointer = pointer.tabs[breadcrumb];\n      if (pointer == undefined) throw \"Breadcrumb for tab invalid\";\n    } else {\n      throw \"Invalid state/breadcrumb combination\";\n    }\n  });\n\n  return pointer;\n}\n", "import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nimport Scene from \"~/components/applicationComponents/Scene\";\nimport Cam from \"~/components/modelComponents/Cam\";\nimport { Line } from \"@react-three/drei\";\nimport { getLinePoints } from \"~/components/modelComponents/Cam/skeleton\";\n\nfunction CamGroup() {\n  let [phi, setPhi] = React.useState(0);\n  useFrame(() => {\n    setPhi((phi + 0.01) % (2 * Math.PI));\n  });\n\n  const r1 = 0.2;\n  const r2 = 0.1;\n  const l = 0.4;\n\n  return (\n    <group position={[0, 0, 0]} rotation={[0, 0, 0]}>\n      <Line\n        points={getLinePoints(phi, r1, r2, l)}\n        color=\"blue\"\n        lineWidth={3}\n        dashed={false}\n      />\n      <Cam />\n    </group>\n  );\n}\n\nexport default function CamFollowerScene() {\n  return (\n    <Scene>\n      <CamGroup />\n    </Scene>\n  );\n}\n", "import * as THREE from \"three\";\nimport React from \"react\";\nimport { Circle, Line } from \"@react-three/drei\";\n\nimport { getLinePoints } from \"./skeleton\";\n\ninterface CamProps {}\n\nexport default function Cam({}: CamProps) {\n  const r1 = 0.2;\n  const r2 = 0.1;\n  const l = 0.4;\n\n  return (\n    <group>\n      <Circle args={[r1, 64]} position={new THREE.Vector3(0, 0, 0)} />\n      <Circle args={[r2, 64]} position={new THREE.Vector3(0, l, 0)} />\n    </group>\n  );\n}\n", "import * as THREE from \"three\";\n\nexport const l = 3;\nexport const r1 = 3;\nexport const r2 = 2;\n\n// derived\nexport function getPhiD(r1: number, r2: number, l: number): number {\n  return (r1 - r2) / l;\n}\nexport function getPhiB(r1: number, r2: number, l: number): number {\n  return Math.atan(\n    (l + (r2 * (r1 - r2)) / l) / (r2 * Math.sqrt(1 - (r1 - r2) ** 2 / l ** 2))\n  );\n}\n\nfunction getH(phi: number, r1: number, r2: number, l: number): number {\n  const phiD = getPhiD(r1, r2, l);\n  const phiB = getPhiB(r1, r2, l);\n\n  let phiEffective = phi;\n\n  if (phi >= Math.PI / 2 && phi <= (3 * Math.PI) / 2) {\n    const angleToVertical = phi - Math.PI / 2;\n    phiEffective = phi - 2 * angleToVertical;\n  }\n\n  if (phiEffective <= phiD) {\n    return r1;\n  } else if (phiEffective <= phiB) {\n    return r1 * (1 / Math.cos(phiEffective - Math.asin((r1 - r2) / l)));\n  } else if (phiEffective <= Math.PI / 2) {\n    const tanPhi = Math.tan(phiEffective);\n    const numerator =\n      l + Math.sqrt(r2 ** 2 + (1 / tanPhi ** 2) * (r2 ** 2 - l ** 2));\n    const x = numerator / (tanPhi + 1 / tanPhi);\n    const y = numerator / (1 + 1 / tanPhi ** 2);\n    return Math.sqrt(x ** 2 + y ** 2);\n  } else {\n    return r1;\n  }\n}\n\nexport function getLinePoints(\n  phi: number,\n  r1: number,\n  r2: number,\n  l: number\n): [THREE.Vector3, THREE.Vector3] {\n  const h = getH(phi, r1, r2, l);\n  return [\n    new THREE.Vector3(0, 0, 0),\n    new THREE.Vector3(h * Math.cos(phi), h * Math.sin(phi), 0),\n  ];\n}\n", "import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { folder, useControls } from \"leva\";\n\nimport Crankshaft from \"~/components/modelComponents/CrankshaftAssembly\";\nimport PistonAssembly from \"~/components/modelComponents/PistonAssembly\";\nimport { useEngineStore } from \"~/state\";\nimport { revolutionsPerMinuteToRadiansPerSecond } from \"~/helpers\";\nimport Cam from \"../Cam\";\n\ninterface EngineProps {\n  navigate: (to: string) => void;\n}\n\nexport default function Engine({ navigate }: EngineProps) {\n  const setElapsedTime = useEngineStore((state) => state.setElapsedTime);\n\n  const crankshaftAngle = useEngineStore((state) => state.crankshaftAngle);\n  const setCrankshaftAngle = useEngineStore((state) => state.setCrankshaftAngle);\n\n  const [{ crankshaftSpeed, on }] = useControls(() => ({\n    Engine: folder({\n      on: true,\n      crankshaftSpeed: {\n        value: 20,\n        min: 10,\n        max: 100,\n        step: 5,\n      },\n    }),\n  }));\n\n  useFrame(({ clock }, delta) => {\n    const newElapsedTime = clock.getElapsedTime();\n    setElapsedTime(newElapsedTime);\n\n    if (!on) return;\n\n    const crankshaftAngleDelta =\n      revolutionsPerMinuteToRadiansPerSecond(crankshaftSpeed) * delta;\n    setCrankshaftAngle(crankshaftAngle + crankshaftAngleDelta);\n  });\n\n  return (\n    <group position={[1, 1, 1]}>\n      <Crankshaft />\n      <group position={[0, 0, 0]}>\n        <PistonAssembly navigate={navigate} />\n      </group>\n      <group position={[3, 0, 0]}>\n        <PistonAssembly inverted navigate={navigate} />\n      </group>\n      <group position={[6, 0, 0]}>\n        <PistonAssembly inverted navigate={navigate} />\n      </group>\n      <group position={[9, 0, 0]}>\n        <PistonAssembly navigate={navigate} />\n      </group>\n    </group>\n  );\n}\n", "import * as THREE from \"three\";\nimport React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Html, Line, Sphere } from \"@react-three/drei\";\nimport { useEngineStore } from \"~/state\";\nimport { useControls, folder } from \"leva\";\n\nimport { CRANKSHAFT_LENGTH, PISTON_ORDER, createVectors } from \"./skeleton\";\n\ninterface CrankshaftProps {}\n\nexport default function Crankshaft({}: CrankshaftProps) {\n  const group = useRef<THREE.Group>(null!);\n  const crankshaftAngle = useEngineStore((state) => state.crankshaftAngle);\n\n  useFrame(() => {\n    group.current.rotation.x = crankshaftAngle;\n  });\n\n  const [{ skeleton, crankRadius }] = useControls(() => ({\n    Crankshaft: folder({\n      skeleton: false,\n      crankRadius: {\n        value: 3,\n        min: 1,\n        max: 5,\n        step: 1,\n      },\n    }),\n  }));\n\n  const vectors = createVectors(crankRadius);\n\n  return (\n    <group ref={group}>\n      <Sphere args={[0.1]} position={[0, 0, 0]}>\n        <meshStandardMaterial color=\"rebeccapurple\" />\n      </Sphere>\n      <Line\n        points={[\n          new THREE.Vector3(0, 0, 0),\n          new THREE.Vector3(CRANKSHAFT_LENGTH, 0, 0),\n        ]}\n        color=\"rebeccapurple\"\n        lineWidth={3}\n        dashed={false}\n      />\n      {skeleton ? (\n        <>\n          <axesHelper args={[3]} />\n          {PISTON_ORDER.map((pistonNumber) => {\n            return (\n              <group\n                key={pistonNumber}\n                position={vectors[`piston${pistonNumber}XOffset`]}\n              >\n                <Line\n                  points={[\n                    new THREE.Vector3(0, 0, 0),\n                    vectors[`piston${pistonNumber}YZOffset`],\n                  ]}\n                  color=\"rebeccapurple\"\n                  lineWidth={3}\n                  dashed={false}\n                />\n              </group>\n            );\n          })}\n          <Html>\n            <div>{Math.floor(crankshaftAngle / (2 * Math.PI))}</div>\n          </Html>\n        </>\n      ) : null}\n    </group>\n  );\n}\n", "import * as THREE from \"three\";\n\nexport const PISTON_SPACING = 3;\nexport const PISTON_PIVOT_OFFSET = 3;\nexport const PISTON_ORDER = [1, 2, 3, 4];\n\n// derived\nexport const CRANKSHAFT_LENGTH = PISTON_SPACING * 3;\n\n// vector calculations\nfunction calculatePistonXOffset(pistonNumber: number): number {\n  return (pistonNumber - 1) * PISTON_SPACING;\n}\n\nfunction calculatePistonYOffset(pistonNumber: number): number {\n  return 0;\n}\n\nfunction calculatePistonZOffset(\n  pistonNumber: number,\n  crankRadius: number\n): number {\n  return pistonNumber == 1 || pistonNumber == 4 ? -crankRadius : crankRadius;\n}\n\nexport function createVectors(crankRadius: number) {\n  const vectors: { [vectorName: string]: THREE.Vector3 } = {};\n\n  PISTON_ORDER.forEach((pistonNumber) => {\n    vectors[`piston${pistonNumber}XOffset`] = new THREE.Vector3(\n      calculatePistonXOffset(pistonNumber),\n      0,\n      0\n    );\n    vectors[`piston${pistonNumber}YZOffset`] = new THREE.Vector3(\n      0,\n      calculatePistonYOffset(pistonNumber),\n      calculatePistonZOffset(pistonNumber, crankRadius)\n    );\n  });\n\n  return vectors;\n}\n", "import React, { useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { Cylinder, Html, Line } from \"@react-three/drei\";\nimport { useEngineStore } from \"~/state\";\nimport { Vector3 } from \"three\";\nimport { useControls, folder } from \"leva\";\nimport Cam from \"~/components/modelComponents/Cam\";\n\ninterface PistonAssemblyProps {\n  inverted?: boolean;\n  navigate?: (to: string) => void;\n}\n\n/**\n * Origin - Center of piston\n */\nexport default function PistonAssembly({\n  inverted = false,\n  navigate,\n}: PistonAssemblyProps) {\n  const [{ crankRadius, pistonRodLength, pistonOffset, skeleton }] =\n    useControls(() => ({\n      Crankshaft: folder({\n        crankRadius: {\n          value: 3,\n          min: 1,\n          max: 5,\n          step: 1,\n        },\n      }),\n      Piston: folder({\n        pistonRodLength: {\n          value: 5,\n          min: 1,\n          max: 5,\n          step: 1,\n        },\n        pistonOffset: {\n          value: 1,\n          min: 0.5,\n          max: 2,\n          step: 0.2,\n        },\n        skeleton: false,\n      }),\n    }));\n\n  const crankshaftAngle = useEngineStore((state) => state.crankshaftAngle);\n\n  const origin = new Vector3(0, 0, 0);\n\n  const crankPinZ =\n    -crankRadius * Math.cos(crankshaftAngle) * (inverted ? -1 : 1);\n\n  const originToCrankPin = new THREE.Vector3(\n    0,\n    crankRadius * Math.sin(crankshaftAngle) * (inverted ? -1 : 1),\n    crankPinZ\n  );\n\n  const crankPinToPistonPin = new THREE.Vector3(\n    0,\n    pistonRodLength *\n      Math.sqrt(\n        1 -\n          (crankRadius / pistonRodLength) ** 2 * Math.cos(crankshaftAngle) ** 2\n      ),\n    -crankPinZ\n  );\n\n  const originToPistonPin = new THREE.Vector3(\n    0,\n    originToCrankPin.y + crankPinToPistonPin.y,\n    0\n  );\n\n  const pistonPinToPiston = new THREE.Vector3(0, pistonOffset, 0);\n\n  const pistonPosition = new THREE.Vector3()\n    .add(originToCrankPin)\n    .add(crankPinToPistonPin)\n    .add(pistonPinToPiston);\n\n  return (\n    <group>\n      {/* skeleton */}\n      {skeleton && (\n        <>\n          <axesHelper args={[1.5]} />\n        </>\n      )}\n\n      {/* piston */}\n      <group onClick={() => navigate && navigate(\"piston\")}>\n        <group position={pistonPosition}>\n          {skeleton && (\n            <>\n              <axesHelper args={[1.5]} />\n            </>\n          )}\n          <Cylinder args={[1, 1, 1, 32]}>\n            <meshStandardMaterial color=\"green\" />\n          </Cylinder>\n        </group>\n        <Line\n          points={[originToCrankPin, originToPistonPin]}\n          color=\"green\"\n          lineWidth={3}\n          dashed={false}\n        />\n      </group>\n\n      {/* piston */}\n      <Line\n        points={[origin, originToCrankPin]}\n        color=\"rebeccapurple\"\n        lineWidth={3}\n        dashed={false}\n      />\n\n      {/* cams */}\n      <group\n        position={[0, 10, 1]}\n        rotation={[crankshaftAngle * 2, Math.PI / 2, 0]}\n        onClick={() => navigate && navigate(\"cam-follower\")}\n      >\n        <Cam />\n      </group>\n      <group\n        position={[0, 10, -1]}\n        rotation={[(crankshaftAngle + Math.PI / 2) * 2, Math.PI / 2, 0]}\n        onClick={() => navigate && navigate(\"cam-follower\")}\n      >\n        {skeleton && (\n          <>\n            <Html>{Math.floor((crankshaftAngle * 2) / (2 * Math.PI))}</Html>\n          </>\n        )}\n        <Cam />\n      </group>\n    </group>\n  );\n}\n", "export function revolutionsPerMinuteToRadiansPerSecond(rpm: number): number {\n  return (rpm * 2 * Math.PI) / 60;\n}\n", "import { useNavigate } from \"react-router-dom\";\n\nconst libraries = [\n  { name: \"Remix\", url: \"https://remix.run/\" },\n  { name: \"React\", url: \"https://reactjs.org/\" },\n  { name: \"TypeScript\", url: \"https://www.typescriptlang.org/\" },\n  { name: \"Tailwind\", url: \"https://tailwindcss.com/\" },\n  { name: \"DaisyUI\", url: \"https://daisyui.com/\" },\n  { name: \"ReactDnd\", url: \"https://daisyui.com/\" },\n  { name: \"Zustand\", url: \"https://github.com/pmndrs/zustand\" },\n  { name: \"Immer\", url: \"https://immerjs.github.io/immer/\" },\n  { name: \"Vercel\", url: \"https://vercel.com\" },\n];\n\nexport default function () {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"hero h-screen\">\n      <div className=\"hero-content text-center\">\n        <div className=\"max-w-md\">\n          <h1 className=\"text-5xl font-bold\">3s1t Editor</h1>\n          <p className=\"py-6\">\n            {libraries.map((library, i) => (\n              <span key={i}>\n                <a className=\"link\" href={library.url}>\n                  {library.name}\n                </a>\n                {i != libraries.length - 1 && \" - \"}\n              </span>\n            ))}\n          </p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => navigate(\"/model\")}\n          >\n            Get Started\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "export default {'version':'19e597fa','entry':{'module':'/build/entry.client-4V2AR5FB.js','imports':['/build/_shared/chunk-V7JCQKT4.js','/build/_shared/chunk-BCP5WUXV.js','/build/_shared/chunk-Y5EUZKPK.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ZLVBSX2S.js','imports':['/build/_shared/chunk-ZAR6VHS6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$navLevel1':{'id':'routes/$navLevel1','parentId':'root','path':':navLevel1','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$navLevel1-RRPDZJBQ.js','imports':['/build/_shared/chunk-5FJKKLI4.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$navLevel1/index':{'id':'routes/$navLevel1/index','parentId':'routes/$navLevel1','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/$navLevel1/index-7VCB4QSI.js','imports':['/build/_shared/chunk-ZAR6VHS6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-MDSVBX5I.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-19E597FA.js'};", "\nimport * as entryServer from \"/Users/lucasmichals/Projects/3s1t/editor/app/entry.server.tsx\";\nimport * as route0 from \"/Users/lucasmichals/Projects/3s1t/editor/app/root.tsx\";\nimport * as route1 from \"/Users/lucasmichals/Projects/3s1t/editor/app/routes/$navLevel1.tsx\";\nimport * as route2 from \"/Users/lucasmichals/Projects/3s1t/editor/app/routes/$navLevel1/index.tsx\";\nimport * as route3 from \"/Users/lucasmichals/Projects/3s1t/editor/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$navLevel1\": {\n      id: \"routes/$navLevel1\",\n      parentId: \"root\",\n      path: \":navLevel1\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$navLevel1/index\": {\n      id: \"routes/$navLevel1/index\",\n      parentId: \"routes/$navLevel1\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": []
}
